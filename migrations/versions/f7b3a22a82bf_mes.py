"""mes

Revision ID: f7b3a22a82bf
Revises: 071248b2c68d
Create Date: 2024-04-12 12:37:53.593341

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f7b3a22a82bf'
down_revision = '071248b2c68d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('answers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nick', sa.String(length=50), nullable=False))
        batch_op.add_column(sa.Column('mes', sa.Text(), nullable=False))
        batch_op.drop_constraint('answers_nik_key', type_='unique')
        batch_op.create_unique_constraint(None, ['nick'])
        batch_op.drop_column('nik')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nick', sa.String(length=50), nullable=True))
        batch_op.drop_constraint('users_nik_key', type_='unique')
        batch_op.create_unique_constraint(None, ['nick'])
        batch_op.drop_column('nik')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nik', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('users_nik_key', ['nik'])
        batch_op.drop_column('nick')

    with op.batch_alter_table('answers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('nik', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('answers_nik_key', ['nik'])
        batch_op.drop_column('mes')
        batch_op.drop_column('nick')

    # ### end Alembic commands ###
